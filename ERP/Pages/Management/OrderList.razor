@page "/Management/Orders/List"
@attribute [Authorize(Roles = Roles.VIEW_ORDERS)]
@inherits ManagementBasePage<Order, OrderService>
<PageTitle>Article List</PageTitle>
<h3>Article List</h3>

<div class="col-lg-9 col-sm-12">

    <div class="card">
        <div class="card-content">
            <!-- Table with no outer spacing -->
            <div class="table-responsive">
                <table class="table mb-0 table-lg">
                    <thead>
                        <tr>
                            <th>Order Number</th>
                            <th class="text-right">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <Virtualize Items="FilterData" Context="order">
                            <tr>
                                <td>@order.OrderNumber</td>
                                <td class="text-right">
                                    <AuthorizeView Roles="@(Roles.DELETE_ORDERS)">
                                        <Authorized>
                                            <span class="aktion-icon" role="button" @onclick="() => SelectedForDeletion = order">
                                                <i class="bi bi-trash-fill"></i>
                                            </span>
                                        </Authorized>
                                    </AuthorizeView>
                                    <AuthorizeView Roles="@(Roles.EDIT_ORDERS)">
                                        <Authorized>
                                            <span class="aktion-icon" role="button" @onclick="async () => await EditAsync(order)">
                                                <i class="bi bi-pencil-square"></i>
                                            </span>
                                        </Authorized>
                                    </AuthorizeView>
                                </td>
                            </tr>
                        </Virtualize>
                    </tbody>
                </table>
            </div>
        </div>

    </div>

</div>

@if (Input is not null)
{
    <Modal Title="@String.Format("Edit order '{0}'", Input.OrderNumber)"
       OnClosed="() => Input = null"
       ModalSize="ModalSize.LG"
       HideFooter="true">

        <EditForm Model="Input" @ref="_form">
            <FluentValidationValidator />
            <ValidationSummary />
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.OrderNumber" class="form-control" id="article-article-number" placeholder="Article Number" />
                        <label for="article-article_number">Order Number</label>
                        <ValidationMessage For="() => Input.OrderNumber" />
                    </div>
                </div>
            </div>
        </EditForm>

        <div class="toolbar">
            <button type="button" class="btn btn-danger" @onclick="() => Input = null">Cancel</button>
            <button type="button" class="btn btn-success" @onclick="SaveAsync">Save</button>
        </div>
    </Modal>
}

@if (SelectedForDeletion is not null)
{
    <ConfirmModal Title="Delete"
              OnClosed="() => SelectedForDeletion = null"
              OnConfirmed="DeleteAsync">
        <p>@String.Format("Should the order '{0}' really be deleted?", SelectedForDeletion.OrderNumber)</p>
    </ConfirmModal>
}